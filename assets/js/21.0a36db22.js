(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{375:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" && || 运算符")]),t._v(" "),a("p",[t._v("通常 "),a("code",[t._v("$$ 和 ||")]),t._v(" 在条件判断的时候作为条件运算符使用，除此之外 && || 在变量赋值的时候，可以作为表达式来使用。\n那么就演示一下具体用法")]),t._v(" "),a("h2",{attrs:{id:"与运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与运算"}},[t._v("#")]),t._v(" && 与运算")]),t._v(" "),a("p",[a("code",[t._v("&& 与运算")]),t._v(" 通常可为表达式做断言处理"),a("br"),t._v("\n左表达式 && 右表达式"),a("br"),t._v("\n当左表达式为 "),a("code",[t._v("(真值 true)")]),t._v(" 时 ,会执行右边的表达式,并且会直接返回 "),a("code",[t._v("右")]),t._v("表达式"),a("br"),t._v("\n当左表达式为 "),a("code",[t._v("(假值 false)")]),t._v(" 时 ,不会执行右边表达式,会直接返回 "),a("code",[t._v("左")]),t._v("表达式,")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 1")]),t._v("\n test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> undefined")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> false")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 0")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 0")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 2")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"或表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#或表达式"}},[t._v("#")]),t._v(" || 或表达式")]),t._v(" "),a("p",[a("code",[t._v("|| 或表达式")]),t._v(" 也可作为条件判断选择式使用，当前表达式为假值为变量赋默认值，与&& 表达式相反"),a("br"),t._v("\n当 左表达式 为 "),a("code",[t._v("真(true)")]),t._v(" 时 ,返回左表达式\n当 左表达式 为 "),a("code",[t._v("假(false)")]),t._v(" 时 ,返回右表达式")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> {a:1}")]),t._v("\n test2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> {}")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 1")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 1")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 1")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -> 1")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);